<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<!-- Read a csv file -->
		<property name= "encoding" value ="UTF-8"/>
		<property name="resource" value="file:c:/temp/output/users-#{new java.text.SimpleDateFormat(&quot;Mddyyyy&quot;).format(new java.util.GregorianCalendar().getTime())}.dat" />
		<!-- <property name="strict" value="false" /> -->
		
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">

				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="|"/>
						<property name="names" value="userId, userNm, deptId, jobTitle" />
					</bean>
				</property>

				<property name="fieldSetMapper">
				    
				    <!-- return back to reader, rather than a mapped object. -->
				    <!--
				    	<bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				    -->
				      
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="uservo" />
					</bean>
					
				</property>

			</bean>
		</property>

	</bean>
	
	<bean id="uservo" class="com.homeplus.batch.model.UserVO" scope="prototype" />

	<bean id="mysqlItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource2" />
		<property name="sql">
			<value>
            <![CDATA[        
            	INSERT INTO DB2ADMIN.TB_USER_TEMP (USER_ID, USER_NM, DEPT_ID, JOB_TITLE) VALUES (:userId, :userNm, :deptId, :jobTitle)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	
	
	
	<bean id="fileItemReaderForDept" class="org.springframework.batch.item.file.FlatFileItemReader">

		<!-- Read a csv file -->
		<property name= "encoding" value ="UTF-8"/>
		<property name="resource" value="file:c:/temp/output/depts-#{new java.text.SimpleDateFormat(&quot;Mddyyyy&quot;).format(new java.util.GregorianCalendar().getTime())}.dat" />
		<!-- <property name="strict" value="false" /> -->
		
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">

				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="|"/>
						<property name="names" value="deptId, deptNm" />
					</bean>
				</property>

				<property name="fieldSetMapper">
				    
				    <!-- return back to reader, rather than a mapped object. -->
				    <!--
				    	<bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				    -->
				      
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="deptvo" />
					</bean>
					
				</property>

			</bean>
		</property>

	</bean>
	
	<bean id="deptvo" class="com.homeplus.batch.model.DeptVO" scope="prototype" />

	<bean id="itemWriterForDept"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource2" />
		<property name="sql">
			<value>
            <![CDATA[        
            	INSERT INTO DB2ADMIN.TB_DEPT_TEMP (DEPT_ID, DEPT_NM) VALUES (:deptId, :deptNm)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	

</beans>
